name: Release with Tag for libsqlcipher

on:
  push:
    tags:
      - '*'

jobs:
  ## ======================================================================================================
  upload_asset_windows_x86_64:
    name: Upload asset on Windows (x86_64)
    # ref: availabel image - https://github.com/actions/runner-images
    runs-on: windows-latest
    steps:
      - name: Checkout
        # https://github.com/actions/checkout
        uses: actions/checkout@v5

      - name: Install openssl(x86_64)
        shell: cmd
        # https://community.chocolatey.org/packages/openssl
        run: |
          choco install openssl -y --version "3.5.3" --x86_64 --no-progress
          where openssl
          mklink /D "C:\OpenSSL-Win64" "C:\Program Files\OpenSSL"

# NOTE(pyoung): this step is replaced by ilammy/msvc-dev-cmd
#      - name: Install Dependency x86_64
#        shell: cmd
#        run: |
#          call "%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath > vs_path.txt
#          set /p VSPATH=<vs_path.txt
#          call "%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" x64

      - name: Install Dependency x86_64
        # https://github.com/ilammy/msvc-dev-cmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
            arch: x86_64
      - name: Run Buildscript - x64
        shell: pwsh
        run: .\build-on-windows.ps1

      - name: 🎁⏫ Upload Artifact
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-windows-x86_64
          path: output
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  ## ======================================================================================================
  upload_asset_linux:
    name: Upload asset on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependency
        run: |
          sudo apt-get install -y tcl-dev
          sudo apt-get install -y libssl-dev

      - name: Run Buildscript
        run: sh ./build-on-linux.sh
  
      - name: Run Zip
        run: zip -r linux.zip output/*

      - name: 🎁⏫ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-linux
          path: linux.zip
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  ## ======================================================================================================
  upload_asset_macos_ios_tvos:
    name: Upload asset on macOS (macOS / iOS / tvOS)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependency
        run: brew install coreutils automake

      - name: Run Buildscript
        run: sh ./build-on-mac.sh

      - name: Run Zip
        run: zip -r macos.zip output/*

      - name: 🎁⏫ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-macos
          path: macos.zip
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  ## ======================================================================================================
  release:
    needs: [upload_asset_windows_x86_64, upload_asset_linux, upload_asset_macos_ios_tvos]
    name: Write Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            CHANGELOG.md

      - name: Make Directory For Download Artifacts
        run: |
          mkdir -p download-artifacts

      - name: 🎁⏬ Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: download-artifacts

      - name: Log artifact download
        run: |
          ls -alh
          ls -alh download-artifacts
  
      - name: Get Tagname
        id: tag_name
        run: |
          echo "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Changelog Reader
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: 🚀 Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          fail_on_unmatched_files: true
          files: |
            ./download-artifacts/artifact-linux/linux.zip
            ./download-artifacts/artifact-windows-x86_64/windows-x86_64.zip
            ./download-artifacts/artifact-macos/macos.zip
